// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
let products = [];
let chart = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadProductsFromStorage();
    initChart();
    updateChart();
    renderProductsList();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
    document.getElementById('productForm').addEventListener('submit', function(e) {
        e.preventDefault();
        addProduct();
    });
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
function addProduct() {
    const name = document.getElementById('productName').value.trim();
    const marketShare = parseFloat(document.getElementById('marketShare').value);
    const marketGrowth = parseFloat(document.getElementById('marketGrowth').value);
    const size = parseFloat(document.getElementById('productSize').value);
    
    if (!name || isNaN(marketShare) || isNaN(marketGrowth) || isNaN(size)) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        return;
    }
    
    const product = {
        id: Date.now(),
        name: name,
        marketShare: marketShare,
        marketGrowth: marketGrowth,
        size: size
    };
    
    products.push(product);
    saveProductsToStorage();
    updateChart();
    renderProductsList();
    
    // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    document.getElementById('productForm').reset();
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
function deleteProduct(id) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç?')) {
        products = products.filter(p => p.id !== id);
        saveProductsToStorage();
        updateChart();
        renderProductsList();
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
function editProduct(id) {
    const product = products.find(p => p.id === id);
    if (!product) return;
    
    document.getElementById('productName').value = product.name;
    document.getElementById('marketShare').value = product.marketShare;
    document.getElementById('marketGrowth').value = product.marketGrowth;
    document.getElementById('productSize').value = product.size;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
    deleteProduct(id);
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ñ–æ—Ä–º–µ
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ BCG –º–∞—Ç—Ä–∏—Ü–µ
function getProductCategory(marketShare, marketGrowth) {
    const avgShare = 1.0; // –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞
    const avgGrowth = 10; // –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ç–µ–º–ø–æ–≤ —Ä–æ—Å—Ç–∞ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
    
    if (marketGrowth >= avgGrowth && marketShare >= avgShare) {
        return { name: '–ó–≤–µ–∑–¥—ã', class: 'category-star' };
    } else if (marketGrowth < avgGrowth && marketShare >= avgShare) {
        return { name: '–î–æ–π–Ω—ã–µ –∫–æ—Ä–æ–≤—ã', class: 'category-cash-cow' };
    } else if (marketGrowth >= avgGrowth && marketShare < avgShare) {
        return { name: '–¢—Ä—É–¥–Ω—ã–µ –¥–µ—Ç–∏', class: 'category-question' };
    } else {
        return { name: '–°–æ–±–∞–∫–∏', class: 'category-dog' };
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ç–æ—á–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getPointColor(marketShare, marketGrowth) {
    const avgShare = 1.0;
    const avgGrowth = 10;
    
    if (marketGrowth >= avgGrowth && marketShare >= avgShare) {
        return 'rgba(255, 99, 132, 0.7)'; // –ó–≤–µ–∑–¥—ã - –∫—Ä–∞—Å–Ω—ã–π
    } else if (marketGrowth < avgGrowth && marketShare >= avgShare) {
        return 'rgba(255, 206, 86, 0.7)'; // –î–æ–π–Ω—ã–µ –∫–æ—Ä–æ–≤—ã - –∂–µ–ª—Ç—ã–π
    } else if (marketGrowth >= avgGrowth && marketShare < avgShare) {
        return 'rgba(75, 192, 192, 0.7)'; // –¢—Ä—É–¥–Ω—ã–µ –¥–µ—Ç–∏ - –±–∏—Ä—é–∑–æ–≤—ã–π
    } else {
        return 'rgba(201, 203, 207, 0.7)'; // –°–æ–±–∞–∫–∏ - —Å–µ—Ä—ã–π
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
function initChart() {
    const ctx = document.getElementById('bcgChart').getContext('2d');
    
    chart = new Chart(ctx, {
        type: 'bubble',
        data: {
            datasets: []
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const product = products[context.dataIndex];
                            if (!product) return '';
                            return [
                                `–ü—Ä–æ–¥—É–∫—Ç: ${product.name}`,
                                `–î–æ–ª—è —Ä—ã–Ω–∫–∞: ${product.marketShare}`,
                                `–†–æ—Å—Ç —Ä—ã–Ω–∫–∞: ${product.marketGrowth}%`,
                                `–í—ã—Ä—É—á–∫–∞: ${product.size} –º–ª–Ω —Ä—É–±.`
                            ];
                        }
                    }
                },
                datalabels: {
                    display: true,
                    color: '#333',
                    font: {
                        weight: 'bold',
                        size: 11
                    },
                    formatter: function(value, context) {
                        const product = products[context.dataIndex];
                        return product ? product.name : '';
                    }
                }
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞',
                        font: {
                            size: 14,
                            weight: 'bold'
                        }
                    },
                    min: 0,
                    max: 3,
                    grid: {
                        color: 'rgba(0, 0, 0, 0.1)'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: '–¢–µ–º–ø —Ä–æ—Å—Ç–∞ —Ä—ã–Ω–∫–∞ (%)',
                        font: {
                            size: 14,
                            weight: 'bold'
                        }
                    },
                    min: -5,
                    max: 30,
                    grid: {
                        color: 'rgba(0, 0, 0, 0.1)'
                    }
                }
            }
        },
        plugins: [ChartDataLabels]
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
function updateChart() {
    if (!chart) return;
    
    const datasets = products.map(product => {
        return {
            label: product.name,
            data: [{
                x: product.marketShare,
                y: product.marketGrowth,
                r: Math.sqrt(product.size) * 2 // –†–∞–¥–∏—É—Å –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª–µ–Ω –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–º—É –∫–æ—Ä–Ω—é –∏–∑ –≤—ã—Ä—É—á–∫–∏
            }],
            backgroundColor: getPointColor(product.marketShare, product.marketGrowth),
            borderColor: 'rgba(255, 255, 255, 0.8)',
            borderWidth: 2
        };
    });
    
    chart.data.datasets = datasets;
    chart.update();
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
function renderProductsList() {
    const container = document.getElementById('productsList');
    
    if (products.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div class="empty-state-icon">üì¶</div>
                <p>–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = products.map(product => {
        const category = getProductCategory(product.marketShare, product.marketGrowth);
        return `
            <div class="product-card">
                <h3>${product.name}</h3>
                <div class="product-info">
                    <strong>–î–æ–ª—è —Ä—ã–Ω–∫–∞:</strong> ${product.marketShare}
                </div>
                <div class="product-info">
                    <strong>–†–æ—Å—Ç —Ä—ã–Ω–∫–∞:</strong> ${product.marketGrowth}%
                </div>
                <div class="product-info">
                    <strong>–í—ã—Ä—É—á–∫–∞:</strong> ${product.size} –º–ª–Ω —Ä—É–±.
                </div>
                <div class="product-category ${category.class}">
                    ${category.name}
                </div>
                <div class="product-actions">
                    <button class="btn-edit" onclick="editProduct(${product.id})">
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="btn-delete" onclick="deleteProduct(${product.id})">
                        –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </div>
        `;
    }).join('');
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveProductsToStorage() {
    localStorage.setItem('bcg_products', JSON.stringify(products));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadProductsFromStorage() {
    const stored = localStorage.getItem('bcg_products');
    if (stored) {
        products = JSON.parse(stored);
    }
}
